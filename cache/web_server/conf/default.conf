# USING CACHE
# NGINX can cache responses to reduce server load and improve performance.
# When a request is made to a cached location, NGINX serves the stored response
# instead of contacting the backend until the cache expires.

# Defines a cache zone, called "mycache", that uses 10MB of shared memory
# to store cache metadata, stored in /tmp/cache directory.
proxy_cache_path /tmp/cache/ keys_zone=mycache:10m;

server {
    listen 80;
    
    location / {
        proxy_pass http://test-api:8000;
        # Use the mycache zone to store responses.
        proxy_cache mycache;
        # Only caches responses after they are requested 3 times, preventing unnecessary caching of infrequent requests.
        # proxy_cache_min_uses 3;
        # If a request returns a 200, NGINX will cache it for 10 seconds
        # before fetching a fresh response from the backend.
        proxy_cache_valid 200 10s;
        # 
        # Serves stale cached data while fetching a fresh copy from the backend, avoiding delays.
        # proxy_cache_use_stale updating;
        # 
        # Ensures NGINX checks if the cached response is still valid before serving it.
        # proxy_cache_revalidate on;
    }
}
